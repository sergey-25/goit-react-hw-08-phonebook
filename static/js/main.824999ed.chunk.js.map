{"version":3,"sources":["services/contactsAPI.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/auth/auth-slices.js","redux/store.js","components/Routes/PublicRoute.jsx","components/Routes/PrivateRoute.jsx","components/Spinner/Spinner.styled.js","components/Spinner/Spinner.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","components/MainNav/MainNav.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.styled.js","components/AppBar/AppBar.jsx","components/Toast/Toast.jsx","App.js","index.js","styles/common.styled.js","redux/contacts/contacts-slices.js","redux/auth/auth-selectors.js","services/authAPI.js","redux/auth/auth-operations.js"],"names":["fetchContacts","a","axios","get","data","addContact","newContact","post","deleteContact","contactId","delete","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","contact","getFilterValue","state","filter","getFiltredContactsList","createSelector","items","normalizedFilter","toLowerCase","name","number","includes","sort","b","localeCompare","getLoadingStatus","isLoading","authSlice","createSlice","initialState","user","email","token","error","isLoggedIn","isFetchCurrentUser","extraReducers","signUp","pending","_","fulfilled","payload","rejected","action","message","logIn","logOut","getCurrentUser","persistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","combineReducers","contactsReducer","auth","persistReducer","authReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","PublicRoute","children","restricted","redirectTo","routeProps","shouldRedirect","useSelector","getUserIsLoggedIn","to","PrivateRoute","LoaderContainer","Spinner","type","color","height","width","timeout","StyledWrapper","Container","MainNav","activeStyle","exact","AuthNav","MenuWrapper","Button","UserMenu","getUserName","dispatch","useDispatch","onClick","src","alt","–ùeader","Nav","AppBar","Toast","duration","position","containerStyle","top","toastOptions","style","border","padding","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","getIsFetchCurrentUser","useEffect","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById","NavWrap","NavLinkStyled","NavLink","FormWrapper","FormStyled","Form","FormTitle","FieldStyled","Field","Label","ValidationMessage","contactsSlice","id","filterSlice","reducers","setFilterValue","actions","errorSlice","loadingSlice","headers","common","Authorization","signUpUser","credentials","logInUser","logOutUser","fetchCurrentUser","savedToken","authAPI","getState","rejectWithValue"],"mappings":"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","file":"static/js/main.824999ed.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = `https://connections-api.herokuapp.com`;\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n  return data;\r\n}\r\n\r\nexport async function addContact(newContact) {\r\n  const { data } = await axios.post(`/contacts`, newContact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(contactId) {\r\n  const { data } = await axios.delete(`/contacts/${contactId}`);\r\n  return data;\r\n}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as contactsAPI from \"../../services/contactsAPI\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async () => {\r\n    const contacts = await contactsAPI.fetchContacts();\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async (newContact) => {\r\n    const contact = await contactsAPI.addContact(newContact);\r\n    return contact;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (contactId) => {\r\n    await contactsAPI.deleteContact(contactId);\r\n    return contactId;\r\n  }\r\n);","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getFilterValue = (state) => state.contacts.filter;\r\n\r\nexport const getContactsList = (state) => state.contacts.items;\r\n\r\nexport const getFiltredContactsList = createSelector(\r\n  [getFilterValue, getContactsList],\r\n  (filter, contacts) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts\r\n      .filter(\r\n        ({ name, number }) =>\r\n          name.toLowerCase().includes(normalizedFilter) ||\r\n          number.includes(normalizedFilter)\r\n      )\r\n      .sort((a, b) => a.name.localeCompare(b.name));\r\n  }\r\n);\r\n\r\nexport const getError = (state) => state.contacts.error;\r\nexport const getLoadingStatus = (state) => state.contacts.isLoading;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { signUp, logIn, logOut, getCurrentUser } from \"redux/auth\";\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  error: null,\r\n  isLoggedIn: false,\r\n  isFetchCurrentUser: false,\r\n  isLoading: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [signUp.pending]: (state, _) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n\r\n    [signUp.fulfilled]: (state, { payload }) => {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n      state.isLoading = false;\r\n    },\r\n\r\n    [signUp.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.error.message;\r\n    },\r\n\r\n    [logIn.pending]: (state, _) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n\r\n    [logIn.fulfilled]: (state, { payload }) => {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n      state.isLoading = false;\r\n    },\r\n\r\n    [logIn.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.error.message;\r\n    },\r\n\r\n    [logOut.pending]: (state, _) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n\r\n    [logOut.fulfilled]: (state, _) => {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n      state.isLoading = false;\r\n    },\r\n\r\n    [logOut.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.error.message;\r\n    },\r\n\r\n    [getCurrentUser.pending]: (state, _) => {\r\n      state.isFetchCurrentUser = true;\r\n      state.isLoading = true;\r\n    },\r\n\r\n    [getCurrentUser.fulfilled]: (state, { payload }) => {\r\n      state.user = payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchCurrentUser = false;\r\n      state.isLoading = false;\r\n    },\r\n\r\n    [getCurrentUser.rejected]: (state, _) => {\r\n      state.isFetchCurrentUser = false;\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-slices\";\r\nimport authReducer from \"./auth/auth-slices\";\r\n\r\nconst persistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  auth: persistReducer(persistConfig, authReducer),\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport const persistor = persistStore(store);","import PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getUserIsLoggedIn } from \"redux/auth\";\r\n\r\nfunction PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = \"/\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getUserIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool,\r\n};\r\n\r\nexport default PublicRoute;","import PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getUserIsLoggedIn } from \"redux/auth\";\r\n\r\nfunction PrivateRoute({ children, redirectTo = \"/\", ...routeProps }) {\r\n  const isLoggedIn = useSelector(getUserIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool,\r\n};\r\n\r\nexport default PrivateRoute;","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const LoaderContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;","  \r\nimport Loader from \"react-loader-spinner\";\r\nimport { LoaderContainer } from \"components/Spinner/Spinner.styled\";\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <LoaderContainer>\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"black\"\r\n        height={120}\r\n        width={120}\r\n        timeout={5000}\r\n      />\r\n    </LoaderContainer>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`;","import React from 'react';\r\nimport { StyledWrapper } from \"./Container.styled\";\r\n\r\nfunction Container({ children }) {\r\n  return <StyledWrapper>{children}</StyledWrapper>;\r\n}\r\n\r\nexport default Container;","import { useSelector } from \"react-redux\";\r\nimport { getUserIsLoggedIn } from \"redux/auth\";\r\nimport { NavWrap, NavLinkStyled } from \"styles/common.styled\";\r\n\r\nfunction MainNav() {\r\n  const isLoggedIn = useSelector(getUserIsLoggedIn);\r\n\r\n  return (\r\n    <NavWrap>\r\n      <NavLinkStyled activeStyle={{ color: \"#651fff\" }} to=\"/\" exact>\r\n        Home\r\n      </NavLinkStyled>\r\n      {isLoggedIn && (\r\n        <NavLinkStyled activeStyle={{ color: \"#651fff\" }} to=\"/contacts\" exact>\r\n          Contacts\r\n        </NavLinkStyled>\r\n      )}\r\n    </NavWrap>\r\n  );\r\n}\r\n\r\nexport default MainNav;","import { NavWrap, NavLinkStyled } from \"styles/common.styled\";\r\n\r\nfunction AuthNav() {\r\n  return (\r\n    <NavWrap>\r\n      <NavLinkStyled activeStyle={{ color: \"#651fff\" }} to=\"/register\" exact>\r\n        Join\r\n      </NavLinkStyled>\r\n      <NavLinkStyled activeStyle={{ color: \"#651fff\" }} to=\"/login\" exact>\r\n        Login\r\n      </NavLinkStyled>\r\n    </NavWrap>\r\n  );\r\n}\r\n\r\nexport default AuthNav;","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const MenuWrapper = styled.div`\r\n  display:inline-block;\r\n  color: black;\r\n  align-items: center;\r\n  & > p {\r\n    display: none;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    & > p {\r\n      display: block;\r\n      font-size: 12px;\r\n      font-weight: 500;\r\n      text-transform: capitalize;\r\n      margin-right: 10px;\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  justify-content:space-between;\r\n  min-width: 100%;\r\n  padding: 10px 10px;\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n  background-color:#fff;\r\n  color: #651fff;\r\n  border-radius: 5px;\r\n  border: 1px solid  #651fff;\r\n  cursor: pointer;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n   \r\n  &:hover,\r\n  &:focus & {\r\n      color: red;\r\n    border: 1px solid  red;\r\n    background:#fff;\r\n  };\r\n  > svg{\r\n      width: 20px;\r\n      height:20px; \r\n  }\r\n  \r\n`;\r\n\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserName } from \"redux/auth\";\r\nimport { logOut } from \"redux/auth\";\r\nimport { MenuWrapper, Button} from \"components/UserMenu/UserMenu.styled\";\r\nimport { FiLogOut} from \"react-icons/fi\";\r\n\r\n\r\nfunction UserMenu() {\r\n  const user = useSelector(getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogOutOnClick = () => {\r\n    dispatch(logOut());\r\n  };\r\n\r\n  return (\r\n    <MenuWrapper>\r\n      \r\n      <Button type=\"button\" onClick={handleLogOutOnClick}>\r\n              Log Out\r\n              <FiLogOut/>\r\n          </Button>\r\n          <img src={''} alt=\"\" width=\"38\" />\r\n      <p> {`Welcome, ${user}`}</p>\r\n    </MenuWrapper>\r\n  );\r\n}\r\n\r\nexport default UserMenu;","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const –ùeader = styled.header`\r\n  background-color: ;\r\n border-bottom: 1px solid black;\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  @media screen and (min-width: 425px) {\r\n    font-size: 18px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { getUserIsLoggedIn } from \"redux/auth\";\r\nimport Container from \"components/Container/Container\";\r\nimport MainNav from \"components/MainNav/MainNav\";\r\nimport AuthNav from \"components/AuthNav/AuthNav\";\r\nimport UserMenu from \"components/UserMenu/UserMenu\";\r\nimport { Nav, –ùeader } from \"components/AppBar/AppBar.styled\";\r\n\r\nfunction AppBar() {\r\n  const isLoggedIn = useSelector(getUserIsLoggedIn);\r\n  return (\r\n    <–ùeader>\r\n      <Container>\r\n        <Nav>\r\n          <MainNav />\r\n          {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </Nav>\r\n      </Container>\r\n    </–ùeader>\r\n  );\r\n}\r\n\r\nexport default AppBar;","import { Toaster } from \"react-hot-toast\";\r\n\r\nfunction Toast() {\r\n  return (\r\n    <Toaster\r\n      duration=\"5000\"\r\n      position=\"top-right\"\r\n      containerStyle={{ top: 100 }}\r\n      toastOptions={{\r\n        style: {\r\n          border: \"1px solid black\",\r\n          padding: \"12px\",\r\n          color: \"#ca1277\",\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Toast;","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { lazy, Suspense } from \"react\";\r\nimport { Switch, Redirect } from \"react-router-dom\";\r\nimport { getCurrentUser, getIsFetchCurrentUser } from \"redux/auth\";\r\nimport PublicRoute from \"./components/Routes/PublicRoute\";\r\nimport PrivateRoute from \"./components/Routes/PrivateRoute\";\r\nimport Spinner from \"./components/Spinner/Spinner\";\r\nimport AppBar from \"./components/AppBar/AppBar\";\r\nimport Container from \"./components/Container/Container\";\r\nimport Toast from \"./components/Toast/Toast\";\r\n\r\nconst HomePage = lazy(() =>\r\n  import(\"pages/HomePage/HomePage\" )\r\n);\r\n\r\nconst RegisterPage = lazy(() =>\r\n  import(\"pages/RegisterPage/RegisterPage\")\r\n);\r\n\r\nconst LoginPage = lazy(() =>\r\n  import(\"pages/LoginPage/LoginPage\")\r\n);\r\n\r\nconst ContactsPage = lazy(() =>\r\n  import(\"pages/ContactsPage/ContactsPage\")\r\n);\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchCurrentUser = useSelector(getIsFetchCurrentUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !isFetchCurrentUser && (\r\n      <>\r\n        <AppBar />\r\n        <Container>\r\n          <Suspense fallback={<Spinner />}>\r\n            <Switch>\r\n              <PublicRoute path=\"/\" exact>\r\n                <HomePage />\r\n              </PublicRoute>\r\n              <PublicRoute path=\"/register\" restricted>\r\n                <RegisterPage />\r\n              </PublicRoute>\r\n              <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\r\n                <LoginPage />\r\n              </PublicRoute>\r\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n                <ContactsPage />\r\n              </PrivateRoute>\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          </Suspense>\r\n          <Toast />\r\n        </Container>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);","import styled from \"@emotion/styled/macro\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const NavWrap = styled.div`\r\n  & > a:first-of-type {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const NavLinkStyled = styled(NavLink)`\r\ncolor:black;\r\n  &:hover,\r\n  &:focus {\r\ncolor: black;\r\n  }\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100vh - 60px);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FormStyled = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 250px;\r\n  padding: 35px 20px;\r\n  \r\n  border-radius: 5px;\r\n  background-color: white;\r\n  @media screen and (min-width: 425px) {\r\n    width: 325px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    padding: 40px 30px;\r\n    width: 420px;\r\n  }\r\n`;\r\n\r\nexport const FormTitle = styled.h2`\r\n  text-align: center;\r\n  color: black;\r\n  font-size: 20px;\r\n  @media screen and (min-width: 425px) {\r\n    font-size: 22px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 27px;\r\n  }\r\n`;\r\n\r\nexport const FieldStyled = styled(Field)`\r\n  width: 100%;\r\n  padding: 8px 0 8px 4px;\r\n  margin-bottom: 5px;\r\n  \r\n  font-size: 16px;\r\n  color: black;\r\n  border: none;\r\n  outline: none;\r\n   border-bottom: 1px solid black;\r\n  &:focus,\r\n  &:hover {\r\n   \r\n  }\r\n  &::placeholder {\r\n    color: grey;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  color: black;\r\n  margin-top: 15px;\r\n  margin-bottom: 5px;\r\n  & > svg {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  width: 100%;\r\n\r\n  border: 1px solid black;\r\n  padding: 8px 12px;\r\n  margin-top: 20px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  background-color: white;\r\n  color: black;\r\n  text-transform: uppercase;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover,\r\n  &:focus {\r\n    \r\n   \r\n  }\r\n`;\r\n\r\nexport const ValidationMessage = styled.div`\r\n  font-size: 14px;\r\n  color: black;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n`;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { fetchContacts, addContact, deleteContact } from \"redux/contacts\";\r\n\r\nconst contactsSlice = createSlice({\r\n  name: \"items\",\r\n  initialState: [],\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n\r\n    [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n\r\n    [deleteContact.fulfilled]: (state, { payload }) => {\r\n      return state.filter((contact) => contact.id !== payload);\r\n    },\r\n  },\r\n});\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: \"\",\r\n  reducers: {\r\n    setFilterValue: (_, { payload }) => payload,\r\n  },\r\n});\r\n\r\nexport const { setFilterValue } = filterSlice.actions;\r\n\r\nconst errorSlice = createSlice({\r\n  name: \"error\",\r\n  initialState: null,\r\n  extraReducers: {\r\n    [fetchContacts.pending]: () => null,\r\n    [fetchContacts.rejected]: (_, action) => action.error.message,\r\n\r\n    [addContact.pending]: () => null,\r\n    [addContact.rejected]: (_, action) => action.error.message,\r\n\r\n    [deleteContact.pending]: () => null,\r\n    [deleteContact.rejected]: (_, action) => action.error.message,\r\n  },\r\n});\r\n\r\nconst loadingSlice = createSlice({\r\n  name: \"isLoading\",\r\n  initialState: false,\r\n  extraReducers: {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n  },\r\n});\r\n\r\nconst items = contactsSlice.reducer;\r\nconst filter = filterSlice.reducer;\r\nconst error = errorSlice.reducer;\r\nconst isLoading = loadingSlice.reducer;\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n  isLoading,\r\n});","export const getUserIsLoggedIn = (state) => state.auth.isLoggedIn;\r\nexport const getIsLoading = (state) => state.auth.IsLoading;\r\nexport const getUserName = (state) => state.auth.user.name;\r\nexport const getIsFetchCurrentUser = (state) => state.auth.isFetchCurrentUser;\r\nexport const getAuthError = (state) => state.auth.error;","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport async function signUpUser(credentials) {\r\n  const { data } = await axios.post(\"/users/signup\", credentials);\r\n  token.set(data.token);\r\n  return data;\r\n}\r\n\r\nexport async function logInUser(credentials) {\r\n  const { data } = await axios.post(`/users/login`, credentials);\r\n  token.set(data.token);\r\n  return data;\r\n}\r\n\r\nexport async function logOutUser() {\r\n  await axios.post(`/users/logout`);\r\n  token.unset();\r\n}\r\n\r\nexport async function fetchCurrentUser(savedToken) {\r\n  token.set(savedToken);\r\n  const { data } = await axios.get(`/users/current`);\r\n  return data;\r\n}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as authAPI from \"services/authAPI\";\r\n\r\nconst signUp = createAsyncThunk(\"auth/register\", async (credentials) => {\r\n  const data = await authAPI.signUpUser(credentials);\r\n  return data;\r\n});\r\n\r\nconst logIn = createAsyncThunk(\"auth/logIn\", async (credentials) => {\r\n  const data = await authAPI.logInUser(credentials);\r\n  return data;\r\n});\r\n\r\nconst logOut = createAsyncThunk(\"auth/logOut\", async () => {\r\n  await authAPI.logOutUser();\r\n});\r\n\r\nconst getCurrentUser = createAsyncThunk(\r\n  \"auth/getCurrentUser\",\r\n  async (_, { getState, rejectWithValue }) => {\r\n    const state = getState();\r\n    const savedToken = state.auth.token;\r\n    if (savedToken === null) return rejectWithValue();\r\n    const data = await authAPI.fetchCurrentUser(savedToken);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport { signUp, logIn, logOut, getCurrentUser };"],"sourceRoot":""}